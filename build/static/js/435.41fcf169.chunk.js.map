{"version":3,"file":"static/js/435.41fcf169.chunk.js","mappings":"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","sources":["components/CounterUp/CounterUpItem.jsx","components/IconBox/IconBox.jsx","components/SectionTitles/SectionTitle.jsx","components/SectionTitles/SectionTitleTwo.jsx","container/Breadcrumb/Breadcrumb.js","components/Work/WorkFilter.jsx","container/service/ServiceIconBoxTwo.js","components/ContactInfo/ContactInfoItemTwo.jsx","components/JobCard/ApplyJob.jsx","components/JobCard/FullJobCard.jsx","firebase.js","components/JobCard/JobCard.jsx","container/Search/SearchFilter.jsx","components/JobCard/AddJob.jsx","pages/Service.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport {useState} from \"react\";\r\nimport CountUp from 'react-countup';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nconst CounterUpItem = ({ data }) => {\r\n    const [didViewCountUp, setDidViewCountUp] = useState(false);\r\n\r\n    const onVisibilityChange = isVisible => {\r\n        if (isVisible) {\r\n            setDidViewCountUp(true);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"funfact\">\r\n            <div className=\"number\">\r\n                <VisibilitySensor\r\n                    onChange={onVisibilityChange}\r\n                    offset={{ top: 10 }}\r\n                    delayedCall\r\n                    >\r\n                    <CountUp end={didViewCountUp ? data.number : 0} />\r\n                </VisibilitySensor>\r\n            </div>\r\n            <h6 className=\"text\">{data.text}</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nCounterUpItem.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default CounterUpItem;\r\n","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport ReactVivus from 'react-vivus';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst IconBox = ({ data, classOption }) => {\r\n    return (\r\n        <div className={`icon-box text-center ${classOption}`}>\r\n            <div className=\"icon\">\r\n                <ReactVivus\r\n                    id={`servicesvg-${data.id}`}\r\n                    option={{\r\n                        file: data.icon,\r\n                        animTimingFunction: 'EASE',\r\n                            type: 'oneByOne',\r\n                            delay: 80\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"content\">\r\n                <h3 className=\"title\">{data.title}</h3>\r\n                <div className=\"desc\">\r\n                    <p>{data.desc}</p>\r\n                </div>\r\n                <Link to={data.link} className=\"link\">{data.pageLink}</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nIconBox.propTypes = {\r\n    data: PropTypes.object,\r\n    classOption: PropTypes.string\r\n};\r\n\r\nIconBox.defaultProps = {\r\n    classOption: \"icon-box text-center\",\r\n};\r\n\r\nexport default IconBox;\r\n","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\n\r\nconst SectionTitle = ({ title, subTitle, titleOption, headingOption }) => {\r\n    return (\r\n        <div className={`section-title ${titleOption}`} data-aos=\"fade-up\">\r\n            <h2 className={`title ${headingOption}`} dangerouslySetInnerHTML={{__html: title}}></h2>\r\n            <p className=\"sub-title\">{subTitle}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n    subTitle: PropTypes.string,\r\n    title: PropTypes.string,\r\n    titleOption: PropTypes.string,\r\n    headingOption: PropTypes.string\r\n};\r\nSectionTitle.defaultProps = {\r\n    titleOption: \"text-center\",\r\n    headingOption: \"title\"\r\n};\r\n\r\nexport default SectionTitle;\r\n","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\n\r\n\r\nconst SectionTitleTwo = ({subTitle , title, classOption}) => {\r\n    return (\r\n        <div className={`section-title-two ${classOption}`} data-aos=\"fade-up\">\r\n            <span className=\"sub-title\">{subTitle}</span>\r\n            <h3 className=\"title\" dangerouslySetInnerHTML={{__html: title}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nSectionTitleTwo.propTypes = {\r\n    subTitle: PropTypes.string,\r\n    title: PropTypes.string,\r\n    classOption: PropTypes.string\r\n};\r\nSectionTitleTwo.defaultProps = {\r\n    classOption: \"section-title-two\"\r\n};\r\n\r\nexport default SectionTitleTwo;\r\n","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Breadcrumb = ({title, content, contentTwo, image}) => {\r\n    const publicUrl = process.env.PUBLIC_URL;\r\n    return (\r\n        <div className=\"page-title-section section section-padding-top overlay-two\" style={{backgroundImage: `url(${publicUrl}/${image})`}}>\r\n            <div className=\"page-title\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"title\">{title}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"page-breadcrumb position-static\">\r\n                <div className=\"container\">\r\n                    <ul className=\"breadcrumb justify-content-center\">\r\n                        <li><Link to={process.env.PUBLIC_URL + \"/\"}>{content}</Link></li>\r\n                        <li className=\"current\">{contentTwo}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBreadcrumb.propTypes = {\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    contentTwo: PropTypes.string,\r\n    image: PropTypes.string\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React  from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {slugify} from \"../../utils\";\r\n\r\nconst WorkFilter = ({ categories, classOption }) => {\r\n    return (\r\n        <div className={`messonry-button ${classOption}`}>\r\n            <button data-filter=\"*\" className=\"is-checked\"><span className=\"filter-text\">All</span></button>\r\n            {categories.map((cat, idx) => <button key={idx} data-filter={`.${slugify(cat)}`}><span className=\"filter-text\">{cat}</span></button>)}\r\n        </div>\r\n    )\r\n}\r\nWorkFilter.propTypes = {\r\n    categories: PropTypes.array,\r\n    classOption: PropTypes.string\r\n}\r\n\r\nWorkFilter.defaultProps = {\r\n    classOption: \"text-lg-end text-start mb-lg-13 mb-md-13 mb-6\"\r\n};\r\n\r\nexport default WorkFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport {useEffect, useRef} from \"react\";\r\nimport IconBoxData from '../../data/iconBox/icon-box.json';\r\nimport IconBox from '../../components/IconBox/IconBox.jsx';\r\nimport SectionTitle from '../../components/SectionTitles/SectionTitle';\r\nimport Parallax from 'parallax-js';\r\n\r\nconst ServiceIconBoxTwo = ({ classOption }) => {\r\n    const sceneEl = useRef(null);\r\n    useEffect(() => {\r\n        const parallaxInstance = new Parallax(sceneEl.current, {\r\n        relativeInput: true,\r\n        })\r\n        \r\n        parallaxInstance.enable();\r\n\r\n        return () => parallaxInstance.disable();\r\n\r\n    }, [])\r\n    return (\r\n        <div className={`section section-padding-t90 section-padding-bottom ${classOption}`}>\r\n            <div className=\"container\">\r\n\r\n                <SectionTitle\r\n                    headingOption=\"fz-32\"\r\n                    title=\"Services that create identities, build brands, and get results\"\r\n                    subTitle=\"We produce beautifully crafted creative solutions that transcend business goals.\r\n                    We provide the exceptional service we’d want to experience ourselves!\"\r\n                />\r\n\r\n                <div className=\"row row-cols-lg-3 row-cols-md-2 row-cols-sm-2 row-cols-1 mb-n6 icon-box-shape-animation\">\r\n\r\n                    {IconBoxData && IconBoxData.map((single, key) => {\r\n                        return(\r\n                            <div key={key} className=\"col mb-6\" data-aos=\"fade-up\" data-aos-delay=\"300\">\r\n                                <IconBox classOption=\"box-border\" data={single} key={key} />\r\n                            </div>\r\n                        ); \r\n                    })}\r\n\r\n                    <div className=\"shape shape-1\" id=\"scene\" ref={sceneEl}>\r\n                        <span data-depth=\"1\"><img src={process.env.PUBLIC_URL + \"/images/shape-animation/video-shape-1.png\"} alt=\"\" /></span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nServiceIconBoxTwo.propTypes = {\r\n    classOption: PropTypes.string\r\n};\r\nServiceIconBoxTwo.defaultProps = {\r\n    classOption: \"section section-padding-t90 section-padding-bottom\"\r\n};\r\n\r\nexport default ServiceIconBoxTwo\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactVivus from 'react-vivus';\r\n\r\nconst ContactInfoItemTwo = ({ data, classOption }) => {\r\n    return (\r\n        <div className={`contact-info ${classOption}`} >\r\n            <div className=\"icon\">\r\n                <ReactVivus\r\n                    id={`contactsvg-${data.id}`}\r\n                    option={{\r\n                        file: data.icon,\r\n                        animTimingFunction: 'EASE',\r\n                            type: 'oneByOne',\r\n                            delay: 80\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"info\">\r\n                <h4 className=\"title\">{data.title}</h4>\r\n                <span className=\"info-text\" dangerouslySetInnerHTML={{__html: data.info}} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactInfoItemTwo.propTypes = {\r\n    data: PropTypes.object,\r\n    classOption: PropTypes.string\r\n};\r\n\r\nContactInfoItemTwo.defaultProps = {\r\n    classOption: \"contact-info ct-info-two\"\r\n};\r\n\r\nexport default ContactInfoItemTwo;\r\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ReactVivus from \"react-vivus\";\nimport PropTypes from \"prop-types\";\nimport \"../../assets/css/animations.css\";\n\nfunction ApplyJob({\n  show,\n  handleClose,\n  setFileUpload,\n  uploadCV,\n  handleUserApply,\n}) {\n  return (\n    <div>\n      <Modal\n        className=\"mt-10\"\n        style={{ zIndex: \"9999\" }}\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton style={{ zIndex: \"100\" }}>\n          <Modal.Title>Apply now</Modal.Title>\n          <div className={` text-center`}>\n            {\" \"}\n            <ReactVivus\n              style={{ marginLeft: \"1rem\", height: \"5rem\" }}\n              className=\"w-50\"\n              id={`svg-icon-apply`}\n              option={{\n                file: \"images/svg/linea/linea-basic-elaboration-mail-upload.svg\",\n                animTimingFunction: \"EASE\",\n                type: \"oneByOne\",\n                delay: 80,\n              }}\n            />\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                name=\"firstName\"\n                type=\"name\"\n                placeholder=\"John\"\n                autoFocus\n                onChange={handleUserApply}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                name=\"lastName\"\n                type=\"name\"\n                placeholder=\"Doe\"\n                autoFocus\n                onChange={handleUserApply}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"name@example.com\"\n                autoFocus\n                onChange={handleUserApply}\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            ></Form.Group>\n\n            <Form.Group>\n              <input\n                onChange={(e) => setFileUpload(e.target.files[0])}\n                type=\"file\"\n                name=\"cv\"\n                id=\"cv\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={uploadCV}>\n            Apply\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\nApplyJob.propTypes = {\n  data: PropTypes.object,\n  classOption: PropTypes.string,\n};\n\nApplyJob.defaultProps = {\n  classOption: \"icon-box text-center\",\n};\n\nexport default ApplyJob;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ReactVivus from \"react-vivus\";\nimport PropTypes from \"prop-types\";\nimport Form from \"react-bootstrap/Form\";\nimport \"../../assets/css/custom.css\";\nimport \"../../assets/css/animations.css\";\nfunction FullJobCard({\n  lgShow,\n  setLgShow,\n  role,\n  description,\n  salary,\n  location,\n  type,\n  industry,\n  job_category,\n  post_date,\n  setFileUpload,\n  uploadCV,\n  job_ref,\n  handleUserApply,\n}) {\n  const [displayApply, setDisplayApply] = useState(false);\n\n  const handleDisplayApply = () => {\n    setDisplayApply(!displayApply);\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"mt-10\"\n        style={{ zIndex: \"9999\" }}\n        size=\"lg\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"example-modal-sizes-title-lg\"\n      >\n        <div className=\"full-card-apply-modal \">\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">{role}</Modal.Title>\n\n            <div className={` text-center`}>\n              {\" \"}\n              <ReactVivus\n                style={{ marginLeft: \"1rem\", height: \"5rem\" }}\n                className=\"w-50\"\n                id={`svg-icon-apply`}\n                option={{\n                  file: \"images/svg/linea/linea-basic-upload.svg\",\n                  animTimingFunction: \"EASE\",\n                  type: \"oneByOne\",\n                  delay: 80,\n                }}\n              />\n            </div>\n            <div>\n              <p>Post date: {post_date.split(\"\").splice(0, 10).join(\"\")}</p>\n            </div>\n          </Modal.Header>\n\n          <Modal.Body>\n            <div className=\"d-flex\">\n              <div>\n                <h5>{type}</h5>\n              </div>\n\n              <div>\n                <p>\n                  <hr />\n                </p>\n              </div>\n\n              <div className=\"px-4\">\n                <h5>{job_category}</h5>\n              </div>\n            </div>\n\n            <div className=\"d-flex mt-1 flex-column\">\n              <div className=\"\">\n                <p>\n                  <strong>Location : </strong>\n                  {location}\n                </p>\n              </div>\n\n              <div className=\"mt-2\">\n                <p>\n                  <strong>Salary : </strong> {salary}\n                </p>\n              </div>\n\n              <div className=\"mt-2\">\n                <p>\n                  <strong>Industry : </strong>\n                  {industry}\n                </p>\n              </div>\n              <div className=\"mt-2\">\n                <p>\n                  <strong>Reference: {job_ref}</strong>\n                </p>\n              </div>\n            </div>\n            <hr />\n            <div>\n              <p>{description}</p>\n            </div>\n            <div className=\"d-flex justify-content-center mt-5\">\n              <Button onClick={handleDisplayApply}>APPLY NOW</Button>\n            </div>\n          </Modal.Body>\n          {displayApply && (\n            <Modal.Footer className=\"slide-in-blurred-bl slide-out-elliptic-top-bck d-flex justify-content-center flex-row\">\n              <Form>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>First name</Form.Label>\n                  <Form.Control\n                    name=\"firstName\"\n                    type=\"name\"\n                    placeholder=\"John\"\n                    autoFocus\n                    onChange={handleUserApply}\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>Last name</Form.Label>\n                  <Form.Control\n                    name=\"lastName\"\n                    type=\"name\"\n                    placeholder=\"Doe\"\n                    autoFocus\n                    onChange={handleUserApply}\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"name@example.com\"\n                    autoFocus\n                    onChange={handleUserApply}\n                  />\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlTextarea1\"\n                ></Form.Group>\n\n                <Form.Group>\n                  <input\n                    onChange={(e) => setFileUpload(e.target.files[0])}\n                    type=\"file\"\n                    name=\"cv\"\n                    id=\"cv\"\n                  />\n                  <Button onClick={uploadCV}>Submit</Button>\n                </Form.Group>\n              </Form>\n            </Modal.Footer>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nFullJobCard.propTypes = {\n  data: PropTypes.object,\n  classOption: PropTypes.string,\n};\n\nFullJobCard.defaultProps = {\n  classOption: \"icon-box text-start\",\n};\n\nexport default FullJobCard;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBC73K58gUY0Muq2MAYuonS8M836Fxuikg\",\n  authDomain: \"uploadingcv-25498.firebaseapp.com\",\n  projectId: \"uploadingcv-25498\",\n  storageBucket: \"uploadingcv-25498.appspot.com\",\n  messagingSenderId: \"176608484245\",\n  appId: \"1:176608484245:web:e10dd3fd37a77cb9b2f49c\",\n  measurementId: \"G-P3LRQQMR7E\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const storage = getStorage(app);\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport PropTypes from \"prop-types\";\n\nimport ApplyJob from \"./ApplyJob\";\nimport FullJobCard from \"./FullJobCard\";\nimport \"../../assets/css/custom.css\";\nimport { storage } from \"../../firebase\";\nimport { ref, uploadBytes } from \"firebase/storage\";\n\nfunction JobCard({\n  classOption,\n  role,\n  description,\n  salary,\n  location,\n  consultant,\n  type,\n  category,\n  industry,\n  job_category,\n  post_date,\n  job_ref,\n}) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [lgShow, setLgShow] = useState(false);\n  const [userApplying, setUserApplying] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const resetUserApplying = () => {\n    setUserApplying({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n    });\n  };\n\n  const handleUserApply = (e) => {\n    setUserApplying({ ...userApplying, [e.target.name]: e.target.value });\n    console.log(userApplying);\n  };\n\n  useEffect(() => {\n    setTimeout(() => setIsLoaded(true), 500);\n  }, []);\n  const limitTextLength = (text, limit) => {\n    if (text.length > limit) {\n      return text.slice(0, limit) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const uploadCV = async () => {\n    if (fileUpload == null) return;\n\n    const fileRef = ref(\n      storage,\n      `CVs/${userApplying.email + job_ref + fileUpload.name}`\n    );\n\n    await uploadBytes(fileRef, fileUpload).then(() => {\n      alert(\"Uploaded file!\");\n\n      resetUserApplying();\n    });\n  };\n\n  return (\n    <div\n      className={`job-card d-flex flex-column container-sm mb-5 border w-100 ${classOption}`}\n    >\n      <div>\n        <ApplyJob\n          handleShow={handleShow}\n          handleClose={handleClose}\n          show={show}\n          setShow={setShow}\n          setFileUpload={setFileUpload}\n          uploadCV={uploadCV}\n          handleUserApply={handleUserApply}\n          userApplying={userApplying}\n        />\n      </div>\n\n      <div>\n        <FullJobCard\n          lgShow={lgShow}\n          setLgShow={() => setLgShow(false)}\n          role={role}\n          description={description}\n          salary={salary}\n          location={location}\n          consultant={consultant}\n          type={type}\n          category={category}\n          industry={industry}\n          job_category={job_category}\n          post_date={post_date}\n          setFileUpload={setFileUpload}\n          uploadCV={uploadCV}\n          handleUserApply={handleUserApply}\n          userApplying={userApplying}\n          job_ref={job_ref}\n        />\n      </div>\n      <div className={`text-container ${isLoaded ? \"loaded\" : \"\"}`}>\n        <div>\n          <div>\n            <h3 className=\"role-title\">{role}</h3>\n          </div>\n          <div>\n            <p>Post date: {post_date.split(\"\").splice(0, 10).join(\"\")}</p>\n          </div>\n        </div>\n        <hr style={{ color: \"rgb(30, 150, 190)\" }} />\n        <div className=\" d-flex\">\n          <div>\n            <h5 className=\"type-category\">{type}</h5>\n          </div>\n\n          <div>\n            <p>\n              <hr />\n            </p>\n          </div>\n\n          <div className=\"px-4\">\n            <h5 className=\"type-category\">{job_category}</h5>\n          </div>\n        </div>\n        <div className=\"d-flex mt-1\">\n          <div className=\"\">\n            <p>{location}</p>\n          </div>\n\n          <div className=\"px-5\">\n            <p>{salary}</p>\n          </div>\n\n          <div className=\"\">\n            <p>{industry}</p>\n          </div>\n        </div>\n\n        <div className=\"mt-3\">\n          <p>{limitTextLength(description, 300)}</p>\n        </div>\n\n        <div className=\"d-flex justify-content-start mt-5\">\n          <div>\n            {\" \"}\n            <Button\n              onClick={handleShow}\n              style={{\n                height: \"2rem\",\n                color: \"black\",\n                borderColor: \"rgb(30, 150, 190)\",\n              }}\n              variant=\"outlined\"\n              className=\"search-button mt-1\"\n            >\n              APPLY NOW\n            </Button>\n          </div>\n          <div className=\"px-3\">\n            <Button\n              onClick={() => setLgShow(true)}\n              style={{\n                height: \"2rem\",\n                color: \"black\",\n                borderColor: \"rgb(30, 150, 190)\",\n              }}\n              variant=\"outlined\"\n              className=\"search-button mt-1\"\n            >\n              MORE INFO\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nJobCard.propTypes = {\n  data: PropTypes.object,\n  classOption: PropTypes.string,\n};\n\nJobCard.defaultProps = {\n  classOption: \"icon-box text-start\",\n};\n\nexport default JobCard;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport \"../../assets/css/custom.css\";\nimport JobCard from \"../../components/JobCard/JobCard.jsx\";\nimport PropTypes from \"prop-types\";\n\nfunction SearchFilter() {\n  const [allJobs, setAllJobs] = useState([]);\n  const [searchInput, setSearchInput] = useState({\n    jobTitle: \"\",\n    location: \"\",\n  });\n  const [filterTypeAndCategory, setFilterTypeAndCategory] = useState({\n    type: \"Contract\",\n    job_category: \"\",\n  });\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n  const [jobsVisible, setJobsVisible] = useState(10);\n\n  const baseURL = \"http://localhost:8000\";\n\n  const fetchPosts = async () => {\n    const res = await fetch(baseURL + \"/all-jobs\");\n\n    const data = await res.json();\n\n    setAllJobs(data);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  useEffect(() => {\n    setJobsVisible(10);\n  }, [filteredJobs]);\n\n  const handleSearchInput = (e) => {\n    setSearchInput({ ...searchInput, [e.target.name]: e.target.value });\n    console.log(searchInput);\n  };\n\n  //* handles the search button click\n  const handleSearchFilter = () => {\n    setFiltered(true);\n    setFilteredJobs(\n      allJobs.filter((job) => {\n        return (\n          job.role.toLowerCase().includes(searchInput.jobTitle.toLowerCase()) &&\n          job.location\n            .toLowerCase()\n            .includes(searchInput.location.toLowerCase())\n        );\n      })\n    );\n  };\n\n  const handleFilterTypeAndCategory = (e) => {\n    setFilterTypeAndCategory({\n      ...filterTypeAndCategory,\n      [e.target.name]: e.target.value,\n    });\n    console.log(filterTypeAndCategory);\n  };\n  //* handles the apply button click\n  const handleFilterTypeAndCategorySearch = () => {\n    setFiltered(true);\n    setFilteredJobs(\n      allJobs.filter((job) => {\n        console.log(job.job_category, job.type, 1);\n\n        console.log(\n          filterTypeAndCategory.job_category,\n          filterTypeAndCategory.type\n        );\n        return (\n          job.type.toLowerCase() === filterTypeAndCategory.type.toLowerCase() &&\n          job.job_category.toLowerCase() ===\n            filterTypeAndCategory.job_category.toLowerCase()\n        );\n      })\n    );\n    console.log(filteredJobs);\n  };\n\n  const handleClearFilterButton = () => {\n    setFiltered(false);\n    setFilteredJobs([]);\n  };\n\n  const displayJobsCount = () => {\n    if (filteredJobs.length === 0) {\n      return (\n        <p>\n          Displaying {allJobs.length < 10 ? allJobs.length : jobsVisible} out of{\" \"}\n          {allJobs.length} jobs\n        </p>\n      );\n    } else {\n      return (\n        <p>\n          Displaying{\" \"}\n          {filteredJobs.length < 10 ? filteredJobs.length : jobsVisible} out of{\" \"}\n          {filteredJobs.length} jobs\n        </p>\n      );\n    }\n  };\n\n  //* handles the load more button click BUT only works for the first 30 jobs\n\n  const handleJobListLength = (jobs) => {\n    jobsVisible >= jobs.length - 10\n      ? setJobsVisible(jobsVisible + jobs.length - jobsVisible)\n      : setJobsVisible((prev) => prev + 10);\n  };\n\n  return (\n    <div className=\"bg-primary-blue\">\n      <div className=\"search-box-jobs d-flex p-2 bd-highlight justify-content-center\">\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 2, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"on\"\n        >\n          <div className=\"d-flex justify-content-center flex-row w-100\">\n            <div>\n              <h4 style={{ color: \"white\" }}>Start your job search</h4>\n            </div>\n            <div>\n              <i\n                className=\"fa fa-search px-3\"\n                style={{ color: \"rgb(30, 150, 190)\" }}\n              ></i>\n            </div>\n          </div>\n          <div className=\" search-border container d-flex justify-content-start w-100 bg-blue\">\n            <div className=\"px-3\">\n              <input\n                onChange={handleSearchInput}\n                id=\"standard-basic\"\n                placeholder=\"Enter Keywords e.g. Job Title\"\n                variant=\"filled\"\n                name=\"jobTitle\"\n                className=\"text-filter\"\n              />\n            </div>\n            <div className=\"px-3\">\n              <input\n                onChange={handleSearchInput}\n                id=\"standard-basic\"\n                placeholder=\"Location\"\n                variant=\"filled\"\n                name=\"location\"\n                className=\"text-filter2\"\n              />\n            </div>\n            <div className=\"px-3\">\n              <Button\n                onClick={handleSearchFilter}\n                style={{\n                  height: \"2rem\",\n                  color: \"white\",\n                  borderColor: \"rgb(30, 150, 190)\",\n                }}\n                variant=\"outlined\"\n                className=\"search-button mt-1\"\n              >\n                SEARCH\n              </Button>\n            </div>\n          </div>\n        </Box>\n      </div>\n\n      <hr />\n      <div>\n        <div className=\"d-flex p-2 bd-highlight justify-content-center flex-row\">\n          <div\n            className=\"d-flex justify-content-start flex-column mt-5  \"\n            style={{ marginLeft: \"3rem\" }}\n          >\n            <div className=\"filter-results border  d-flex flex-column mt-8 rounded \">\n              <h2 className=\"filter-results-text p-2 m-2\">Filter Results</h2>\n\n              <div className=\"p-2 m-2 \">\n                <FormControl>\n                  <FormLabel\n                    style={{ color: \"rgb(30, 150, 190)\" }}\n                    id=\"demo-radio-buttons-group-label\"\n                  >\n                    Job Type\n                  </FormLabel>\n                  <RadioGroup\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\n                    defaultValue=\"Contract\"\n                    name=\"type\"\n                    style={{ color: \"black\" }}\n                    onChange={handleFilterTypeAndCategory}\n                  >\n                    <FormControlLabel\n                      value=\"Contract\"\n                      control={<Radio color=\"default\" />}\n                      label=\"Contract\"\n                    />\n                    <FormControlLabel\n                      value=\"Permanent\"\n                      control={<Radio color=\"default\" />}\n                      label=\"Permanent\"\n                    />\n                    <FormControlLabel\n                      value=\"Temporary\"\n                      control={<Radio color=\"default\" />}\n                      label=\"Temporary\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n              <div className=\"p-2 m-2\">\n                <FormControl>\n                  <FormLabel\n                    style={{ color: \"rgb(30, 150, 190)\" }}\n                    id=\"demo-radio-buttons-group-label\"\n                  >\n                    Sectors\n                  </FormLabel>\n                  <RadioGroup\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\n                    defaultValue=\"Software & Web Development\"\n                    name=\"job_category\"\n                    style={{ color: \"black\" }}\n                    onChange={handleFilterTypeAndCategory}\n                  >\n                    <FormControlLabel\n                      value=\"Software & Web Development\"\n                      control={<Radio color=\"default\" />}\n                      label=\"Software & Web Development\"\n                    />\n                    <FormControlLabel\n                      value=\"Networking & Info Security\"\n                      control={<Radio color=\"default\" />}\n                      label=\"Networking & Info Security\"\n                    />\n                    <FormControlLabel\n                      value=\"IT Support & Infrastructure\"\n                      control={<Radio color=\"default\" />}\n                      label=\"IT Support & Infrastructure\"\n                    />\n\n                    <FormControlLabel\n                      value=\"QA & Testing\"\n                      control={<Radio color=\"default\" />}\n                      label=\"QA & Testing\"\n                    />\n                    <FormControlLabel\n                      value=\"Business Change & Transformation\"\n                      control={<Radio color=\"default\" />}\n                      label=\"Business Change & Transformation\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n                <div className=\"p-2 m-2 d-flex \">\n                  <div>\n                    <Button\n                      onClick={handleFilterTypeAndCategorySearch}\n                      style={{\n                        height: \"2rem\",\n                        color: \"black\",\n                        borderColor: \"rgb(30, 150, 190)\",\n                      }}\n                      variant=\"outlined\"\n                      className=\"search-button mt-1\"\n                    >\n                      Apply\n                    </Button>\n                  </div>\n                  <div className=\"px-2\">\n                    <Button\n                      onClick={handleClearFilterButton}\n                      style={{\n                        height: \"2rem\",\n                        color: \"black\",\n                        borderColor: \"rgb(30, 150, 190)\",\n                      }}\n                      variant=\"outlined\"\n                      className=\"search-button mt-1\"\n                    >\n                      CLEAR\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"d-flex flex-column justify-content-center jobs-container container-sm p-5 mt-1\">\n            <div className=\"d-flex justify-content-end mb-2 \">\n              {displayJobsCount()}\n            </div>\n            {filteredJobs.length === 0\n              ? allJobs.slice(0, jobsVisible).map((job) => {\n                  return (\n                    <JobCard\n                      role={job.role}\n                      description={job.job_description}\n                      salary={job.salary}\n                      location={job.location}\n                      category={job.category}\n                      industry={job.industry}\n                      consultant={job.consultant}\n                      type={job.type}\n                      job_category={job.job_category}\n                      post_date={job.post_date}\n                      job_ref={job.job_ref}\n                    />\n                  );\n                })\n              : filteredJobs.slice(0, jobsVisible).map((job) => {\n                  return (\n                    <JobCard\n                      role={job.role}\n                      description={job.job_description}\n                      salary={job.salary}\n                      location={job.location}\n                      category={job.category}\n                      industry={job.industry}\n                      consultant={job.consultant}\n                      type={job.type}\n                      job_category={job.job_category}\n                      post_date={job.post_date}\n                      job_ref={job.job_ref}\n                    />\n                  );\n                })}\n            <div className=\"container d-flex justify-content-center\">\n              <Button\n                onClick={() => {\n                  handleJobListLength(filtered ? filteredJobs : allJobs);\n                }}\n              >\n                Load more\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nSearchFilter.propTypes = {\n  data: PropTypes.object,\n  classOption: PropTypes.string,\n};\n\nSearchFilter.defaultProps = {\n  classOption: \"text-center\",\n};\n\nexport default SearchFilter;\n","import React, { useState } from \"react\";\n\nfunction AddJob() {\n  const baseURL = \"http://localhost:8000\";\n\n  const [jobDetails, setJobDetails] = useState({\n    title: \"\",\n    type: \"\",\n    location: \"\",\n    description: \"\",\n    salary: \"\",\n    client_id: \"\",\n    category: \"\",\n    industry: \"\",\n    consultant: \"\",\n  });\n\n  const handleInputs = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setJobDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const postJobs = async () => {\n    const res = await fetch(baseURL + \"/post-job\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(jobDetails),\n    });\n\n    const data = await res.json();\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={handleInputs}\n        name=\"title\"\n        placeholder=\"title\"\n        type=\"text\"\n      ></input>\n      <input\n        onChange={handleInputs}\n        name=\"type\"\n        placeholder=\"type\"\n        type=\"text\"\n      ></input>\n      <input\n        onChange={handleInputs}\n        name=\"location\"\n        placeholder=\"location\"\n        type=\"text\"\n      ></input>\n      <input\n        onChange={handleInputs}\n        name=\"description\"\n        placeholder=\"description\"\n        type=\"text\"\n      ></input>\n      <input\n        onChange={handleInputs}\n        name=\"salary\"\n        placeholder=\"salary\"\n        type=\"text\"\n      ></input>\n      <input\n        onChange={handleInputs}\n        name=\"client_id\"\n        placeholder=\"client_id\"\n        type=\"text\"\n      ></input>\n      <select onChange={handleInputs} name=\"category\">\n        <option value=\"Software & Web Development\">\n          Software & Web Development\n        </option>\n        <option value=\"Networking & Info Security\">\n          Networking & Info Security\n        </option>\n        <option value=\"IT Support & Infrastructure\">\n          IT Support & Infrastructure\n        </option>\n        <option value=\"QA & Testing\">QA & Testing</option>\n        <option value=\"Business Change & Transformation\">\n          Business Change & Transformation\n        </option>\n      </select>\n\n      <input\n        onChange={handleInputs}\n        name=\"industry\"\n        placeholder=\"industry\"\n        type=\"industry\"\n      ></input>\n      <input\n        onChange={handleInputs}\n        name=\"consultant\"\n        placeholder=\"consultant\"\n        type=\"consultant\"\n      ></input>\n      <button onClick={postJobs} className=\"btn btn-primary\"></button>\n    </div>\n  );\n}\n\nexport default AddJob;\n","import React from \"react\";\r\nimport SEO from \"../components/SEO\";\r\nimport Header from \"../partials/header/Header\";\r\nimport Breadcrumb from \"../container/Breadcrumb/Breadcrumb\";\r\nimport ServiceIconBoxTwo from \"../container/service/ServiceIconBoxTwo\";\r\nimport ServiceSkill from \"../container/service/ServiceSkill\";\r\nimport AboutSix from \"../container/About/AboutSix\";\r\nimport FunfactTwo from \"../container/Funfact/FunfactTwo\";\r\nimport ContactInformationThree from \"../container/ContactInformation/ContactInformationThree\";\r\nimport Footer from \"../container/Footer/Footer\";\r\nimport ScrollToTop from \"../components/ScrollToTop.jsx\";\r\nimport PortfolioTwo from \"../container/Portfolio/PortfolioTwo\";\r\nimport SearchFilter from \"../container/Search/SearchFilter\";\r\nimport Networking from \"../networking/Networking.jsx\";\r\nimport AddJob from \"../components/JobCard/AddJob.jsx\";\r\n\r\nconst Service = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SEO title=\"Nextgen || Job-search\" />\r\n      <Header />\r\n      <Breadcrumb\r\n        image=\"images/bg/breadcrumb-bg-three.jpg\"\r\n        title=\"Browse Current Vacancies\"\r\n        content=\"Home\"\r\n        contentTwo=\"Job-search\"\r\n      />\r\n\r\n      <SearchFilter />\r\n      <AddJob />\r\n      {/* <Networking /> */}\r\n\r\n      {/* <PortfolioTwo /> */}\r\n\r\n      {/* <ServiceIconBoxTwo /> */}\r\n      {/* <ServiceSkill /> */}\r\n      {/* <AboutSix /> */}\r\n      {/* <FunfactTwo /> */}\r\n      {/* <ContactInformationThree /> */}\r\n      <Footer />\r\n      <ScrollToTop />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n"],"names":["data","useState","didViewCountUp","setDidViewCountUp","className","onChange","isVisible","offset","top","delayedCall","end","number","text","IconBox","classOption","id","option","file","icon","animTimingFunction","type","delay","title","desc","to","link","pageLink","defaultProps","SectionTitle","subTitle","titleOption","headingOption","dangerouslySetInnerHTML","__html","SectionTitleTwo","content","contentTwo","image","style","backgroundImage","process","WorkFilter","categories","map","cat","idx","slugify","ServiceIconBoxTwo","sceneEl","useRef","useEffect","parallaxInstance","Parallax","current","relativeInput","enable","disable","IconBoxData","single","key","ref","src","alt","ContactInfoItemTwo","info","ApplyJob","show","handleClose","setFileUpload","uploadCV","handleUserApply","Modal","zIndex","onHide","closeButton","marginLeft","height","Form","controlId","name","placeholder","autoFocus","e","target","files","variant","onClick","FullJobCard","lgShow","setLgShow","role","description","salary","location","industry","job_category","post_date","job_ref","displayApply","setDisplayApply","size","split","splice","join","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getAnalytics","getStorage","JobCard","consultant","category","setShow","handleShow","isLoaded","setIsLoaded","firstName","lastName","email","userApplying","setUserApplying","fileUpload","value","console","log","setTimeout","limit","fileRef","uploadBytes","then","alert","color","length","slice","Button","borderColor","SearchFilter","allJobs","setAllJobs","jobTitle","searchInput","setSearchInput","filterTypeAndCategory","setFilterTypeAndCategory","filteredJobs","setFilteredJobs","filtered","setFiltered","jobsVisible","setJobsVisible","fetchPosts","fetch","baseURL","res","json","handleSearchInput","handleFilterTypeAndCategory","Box","component","sx","m","width","noValidate","autoComplete","filter","job","toLowerCase","includes","FormControl","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","label","job_description","jobs","prev","client_id","jobDetails","setJobDetails","handleInputs","postJobs","method","headers","body","JSON","stringify","SEO","Header","Breadcrumb","Footer","ScrollToTop"],"sourceRoot":""}